spring:
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${SSUSPOT_SNS_DB_URL}
    username: ${SSUSPOT_SNS_DB_USERNAME}
    password: ${SSUSPOT_SNS_DB_PASSWORD}
    # HikariCP 연결 풀 최적화
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 20000
      idle-timeout: 300000
      max-lifetime: 1800000
      leak-detection-threshold: 60000
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
        # N+1 문제 해결을 위한 배치 페칭 설정
        jdbc:
          batch_size: 20
          fetch_size: 50
        order_inserts: true
        order_updates: true
        batch_versioned_data: true
        # 컬렉션 배치 페칭
        default_batch_fetch_size: 100
        # 지연 로딩 최적화
        enable_lazy_load_no_trans: false
    show-sql: true
    open-in-view: false
  kafka:
    bootstrap-servers: localhost:9092
    streams:
      application-id: ssuspot-sns
      properties:
        default:
          key:
            serde: org.apache.kafka.common.serialization.Serdes$StringSerde
          value:
            serde: org.apache.kafka.common.serialization.Serdes$StringSerde

  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB # 한개 파일의 최대 사이즈 (default: 1MB)
      max-request-size: 10MB # 한개 요청의 최대 사이즈 (default: 10MB)
  redis:
    host: ${SSUSPOT_REDIS_HOST}
    port: ${SSUSPOT_REDIS_PORT}
    password: ${SSUSPOT_REDIS_PASSWORD}

app:
  jwt:
    secret: ${SSUSPOT_JWT_SECRET}
    accessTokenExpirationMS: 86400000
    refreshTokenExpirationMS: 2592000000
cloud:
  aws:
    s3:
      bucket: ${SSUSPOT_S3_BUCKET_NAME}
    credentials:
      access-key: ${SSUSPOT_S3_ACCESS_KEY}
      secret-key: ${SSUSPOT_S3_SECRET_KEY}
    region:
      static: ${SSUSPOT_S3_REGION}
    stack:
      auto: false

logging:
  level:
    org.hibernate.SQL: debug
    org.hibernate.type: trace

management:
  endpoints:
    web:
      exposure:
        include: "*"